name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "The version bump to perform"
        required: true
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.bump.outputs.version }}
      id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build Protokollant
        run: |
          cargo build
          echo $PWD/target/debug >> $GITHUB_PATH

      - name: Bump version
        id: bump
        run: echo "version=$(protokollant ${{ inputs.bump }})" >> $GITHUB_OUTPUT

      - name: Git tag and push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "release: ${{ steps.bump.outputs.version }}"
          tagging_message: ${{ steps.bump.outputs.version }}

      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          release_name: ${{ steps.bump.outputs.version }}
          draft: true
          prerelease: false

  linux_amd64:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.release.outputs.version }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build linux-amd64 binary
        run: cargo build --release

      - name: Archive
        working-directory: target/release
        run: tar czf protokollant-${{ needs.release.outputs.version }}-linux-amd64.tar.gz protokollant

      - name: Upload linux-amd64 binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./target/release/protokollant-${{ needs.release.outputs.version }}-linux-amd64.tar.gz
          asset_name: protokollant-${{ needs.release.outputs.version }}-linux-amd64.tar.gz
          asset_content_type: application/tar+gzip

  darwin:
    runs-on: macos-latest
    needs: release
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            platform: amd64
          - target: aarch64-apple-darwin
            platform: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.release.outputs.version }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Archive
        working-directory: target/${{ matrix.target }}/release
        run: tar czf protokollant-${{ needs.release.outputs.version }}-darwin-${{ matrix.platform }}.tar.gz protokollant

      - name: Upload binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/protokollant-${{ needs.release.outputs.version }}-darwin-${{ matrix.platform }}.tar.gz
          asset_name: protokollant-${{ needs.release.outputs.version }}-darwin-${{ matrix.platform }}.tar.gz
          asset_content_type: application/tar+gzip

  windows_amd64:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.release.outputs.version }}

      - name: Build windows-amd64 binary
        run: cargo build --release

      - name: Archive
        working-directory: target\release
        shell: pwsh
        run: Compress-Archive -DestinationPath protokollant-${{ needs.release.outputs.version }}-windows-amd64.zip -LiteralPath protokollant.exe

      - name: Upload windows-amd64 binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: .\target\release\protokollant-${{ needs.release.outputs.version }}-windows-amd64.zip
          asset_name: protokollant-${{ needs.release.outputs.version }}-windows-amd64.zip
          asset_content_type: application/zip

  publish:
    runs-on: ubuntu-latest
    needs:
      - release
      - linux_amd64
      - darwin
      - windows_amd64
    steps:
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release.outputs.id }}

  next_iteration:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build Protokollant
        run: |
          cargo build
          echo $PWD/target/debug >> $GITHUB_PATH

      - name: Next iteration
        run: protokollant prerelease --unreleased --no-changelog

      - name: Git push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: start next iteration"
